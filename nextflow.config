//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    version = false
    out_dir = "output"
    fastq = null
    bam = null
    db_directory = null
    threads = 4
    host_reference = null
    regions_bedfile = null
    approx_size = 7000
    assm_coverage = 60
    trim_length = 150
    prefix = null
    primers = null
    insert_reference = null
    sample = null
    sample_sheet = null
    disable_ping = false
    analyse_unclassified = false
    override_basecaller_cfg = null
    medaka_model_path = null
    flye_quality = "nano-hq"
    non_uniform_coverage = false
    large_construct = false
    full_reference = null
    cutsite_mismatch = 1
    primer_mismatch = 2
    
    assembly_tool = "flye"
    canu_fast = false
    client_fields = null

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
      example_cmd = [
          "--fastq 'wf-clone-validation-demo/test'",
          "--primers 'wf-clone-validation-demo/primers.tsv'",
      ]
      container_sha = "sha90f3b9bf90d79d18fc16602e9f06049706bc8743"
      container_sha_medaka = "sha447c70a639b8bcf17dc49b51e74dfcde6474837b"
      common_sha = "shae58638742cf84dbeeec683ba24bcdee67f64b986"
      container_sha_canu = "shabbdea3813f6fb436ea0cbaa19958ad772db9154c"
      plannotate_sha = "shaf7f37f751dd0bc529121b765fb63322502288a03"
      agent = null
    }
}

manifest {
    name            = 'epi2me-labs/wf-clone-validation'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-clone-validation'
    description     = 'De-novo reconstruction of synthetic plasmid sequences.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v1.4.0'
}

epi2melabs {
  tags = "plasmid,denovo,annotation"
}

// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wfplasmid {
        container = "ontresearch/wf-clone-validation:${params.wf.container_sha}"
    }
    withLabel:canu {
        container = "ontresearch/canu:${params.wf.container_sha_canu}"
    }
    withLabel:medaka {
        container = "ontresearch/medaka:${params.wf.container_sha_medaka}"
    }
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    withLabel:plannotate {
        container = "ontresearch/plannotate:${params.wf.plannotate_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}

profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }

    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfplasmid {
                container = "${params.aws_image_prefix}-wf-clone-validation:${params.wf.container_sha}"
            }
            withLabel:medaka {
                container = "${params.aws_image_prefix}-medaka:${params.wf.container_sha_medaka}"
            }
            withLabel:canu {
                container = "${params.aws_image_prefix}-canu:${params.wf.container_sha_canu}"
            }
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel:plannotate {
                container = "${params.aws_image_prefix}-plannotate:${params.wf.plannotate_sha}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
    aws.region = 'eu-west-1'
    aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}

timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
  timeline.overwrite = true
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
  report.overwrite = true
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
  trace.overwrite = true
}
env {
        PYTHONNOUSERSITE = 1
        JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}
